{
  "name": "sheet",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "sheet.tsx",
      "content": "import type { Component, ComponentProps, ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport {\n  DialogContentProps,\n  DialogDescriptionProps,\n  DialogOverlayProps,\n  DialogPortalProps,\n  DialogTitleProps,\n  Dialog as SheetPrimitive\n} from \"@kobalte/core/dialog\"\nimport { PolymorphicProps } from \"@kobalte/core/polymorphic\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Sheet = SheetPrimitive\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.CloseButton\n\nconst portalVariants = cva(\"fixed inset-0 z-50 flex\", {\n  variants: {\n    position: {\n      top: \"items-start\",\n      bottom: \"items-end\",\n      left: \"justify-start\",\n      right: \"justify-end\"\n    }\n  },\n  defaultVariants: { position: \"right\" }\n})\n\ntype PortalProps = DialogPortalProps & VariantProps<typeof portalVariants>\n\nconst SheetPortal: Component<PortalProps> = (props) => {\n  const [, rest] = splitProps(props, [\"position\", \"children\"])\n  return (\n    <SheetPrimitive.Portal {...rest}>\n      <div class={portalVariants({ position: props.position })}>{props.children}</div>\n    </SheetPrimitive.Portal>\n  )\n}\n\ntype OverlayProps<T extends ValidComponent = \"div\"> = PolymorphicProps<T, DialogOverlayProps>\n\nconst SheetOverlay: Component<OverlayProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <SheetPrimitive.Overlay\n      class={cn(\n        \"fixed inset-0 z-50 bg-black/80 data-[expanded=]:animate-in data-[closed=]:animate-out data-[closed=]:fade-out-0 data-[expanded=]:fade-in-0\",\n        props.class\n      )}\n      {...rest}\n    />\n  )\n}\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[closed=]:duration-300 data-[expanded=]:duration-500 data-[expanded=]:animate-in data-[closed=]:animate-out\",\n  {\n    variants: {\n      position: {\n        top: \"inset-x-0 top-0 border-b data-[closed=]:slide-out-to-top data-[expanded=]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[closed=]:slide-out-to-bottom data-[expanded=]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[closed=]:slide-out-to-left data-[expanded]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[closed=]:slide-out-to-right data-[expanded=]:slide-in-from-right sm:max-w-sm\"\n      }\n    },\n    defaultVariants: {\n      position: \"right\"\n    }\n  }\n)\n\ntype ContentProps<T extends ValidComponent = \"div\"> = PolymorphicProps<T, DialogContentProps> &\n  VariantProps<typeof sheetVariants>\n\nconst SheetContent: Component<ContentProps> = (props) => {\n  const [, rest] = splitProps(props, [\"position\", \"class\", \"children\"])\n  return (\n    <SheetPortal position={props.position}>\n      <SheetOverlay />\n      <SheetPrimitive.Content\n        class={cn(sheetVariants({ position: props.position }), props.class)}\n        {...rest}\n      >\n        {props.children}\n        <SheetPrimitive.CloseButton class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-width=\"2\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            class=\"size-4\"\n          >\n            <path d=\"M18 6l-12 12\" />\n            <path d=\"M6 6l12 12\" />\n          </svg>\n          <span class=\"sr-only\">Close</span>\n        </SheetPrimitive.CloseButton>\n      </SheetPrimitive.Content>\n    </SheetPortal>\n  )\n}\n\nconst SheetHeader: Component<ComponentProps<\"div\">> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <div class={cn(\"flex flex-col space-y-2 text-center sm:text-left\", props.class)} {...rest} />\n  )\n}\n\nconst SheetFooter: Component<ComponentProps<\"div\">> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <div\n      class={cn(\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\", props.class)}\n      {...rest}\n    />\n  )\n}\n\ntype TitleProps<T extends ValidComponent = \"h2\"> = PolymorphicProps<T, DialogTitleProps>\n\nconst SheetTitle: Component<TitleProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <SheetPrimitive.Title\n      class={cn(\"text-lg font-semibold text-foreground\", props.class)}\n      {...rest}\n    />\n  )\n}\n\ntype DescriptionProps<T extends ValidComponent = \"p\"> = PolymorphicProps<T, DialogDescriptionProps>\n\nconst SheetDescription: Component<DescriptionProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <SheetPrimitive.Description\n      class={cn(\"text-sm text-muted-foreground\", props.class)}\n      {...rest}\n    />\n  )\n}\n\nexport {\n  Sheet,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription\n}\n"
    }
  ],
  "type": "ui"
}