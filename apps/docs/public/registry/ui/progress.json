{
  "name": "progress",
  "dependencies": [
    "@kobalte/core"
  ],
  "registryDependencies": [
    "label"
  ],
  "files": [
    {
      "name": "progress.tsx",
      "content": "import type { Component, ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport { PolymorphicProps } from \"@kobalte/core/polymorphic\"\nimport {\n  ProgressLabelProps,\n  Progress as ProgressPrimitive,\n  ProgressRootProps,\n  ProgressValueLabelProps\n} from \"@kobalte/core/progress\"\n\nimport { Label } from \"~/registry/ui/label\"\n\ntype RootProps<T extends ValidComponent = \"div\"> = PolymorphicProps<T, ProgressRootProps>\n\nconst Progress: Component<RootProps> = (props) => {\n  const [, rest] = splitProps(props, [\"children\"])\n  return (\n    <ProgressPrimitive {...rest}>\n      {props.children}\n      <ProgressPrimitive.Track class=\"relative h-4 w-full overflow-hidden rounded-full bg-secondary\">\n        <ProgressPrimitive.Fill class=\"h-full w-[var(--kb-progress-fill-width)] flex-1 bg-primary transition-all\" />\n      </ProgressPrimitive.Track>\n    </ProgressPrimitive>\n  )\n}\n\nconst ProgressLabel: Component<ProgressLabelProps> = (props) => {\n  return <ProgressPrimitive.Label as={Label} {...props} />\n}\n\nconst ProgressValueLabel: Component<ProgressValueLabelProps> = (props) => {\n  return <ProgressPrimitive.ValueLabel as={Label} {...props} />\n}\n\nexport { Progress, ProgressLabel, ProgressValueLabel }\n"
    }
  ],
  "type": "ui"
}