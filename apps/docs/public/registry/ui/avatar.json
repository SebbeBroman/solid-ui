{
  "name": "avatar",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "avatar.tsx",
      "content": "import type { Component, ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport {\n  ImageFallbackProps,\n  ImageImgProps,\n  Image as ImagePrimitive,\n  ImageRootProps\n} from \"@kobalte/core/image\"\nimport { PolymorphicProps } from \"@kobalte/core/polymorphic\"\n\nimport { cn } from \"~/lib/utils\"\n\ntype RootProps<T extends ValidComponent = \"span\"> = PolymorphicProps<T, ImageRootProps>\n\nconst Avatar: Component<RootProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <ImagePrimitive\n      class={cn(\"relative flex size-10 shrink-0 overflow-hidden rounded-full\", props.class)}\n      {...rest}\n    />\n  )\n}\n\ntype ImageProps<T extends ValidComponent = \"img\"> = PolymorphicProps<T, ImageImgProps>\n\nconst AvatarImage: Component<ImageProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return <ImagePrimitive.Img class={cn(\"aspect-square size-full\", props.class)} {...rest} />\n}\n\ntype FallbackProps<T extends ValidComponent = \"span\"> = PolymorphicProps<T, ImageFallbackProps>\n\nconst AvatarFallback: Component<FallbackProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <ImagePrimitive.Fallback\n      class={cn(\"flex size-full items-center justify-center rounded-full bg-muted\", props.class)}\n      {...rest}\n    />\n  )\n}\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"
    }
  ],
  "type": "ui"
}