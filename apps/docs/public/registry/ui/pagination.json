{
  "name": "pagination",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "pagination.tsx",
      "content": "import type { Component, ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport {\n  PaginationEllipsisProps,\n  PaginationItemProps,\n  PaginationNextProps,\n  PaginationPreviousProps,\n  Pagination as PaginationPrimitive,\n  PaginationRootProps\n} from \"@kobalte/core/pagination\"\nimport { PolymorphicProps } from \"@kobalte/core/polymorphic\"\n\nimport { cn } from \"~/lib/utils\"\nimport { buttonVariants } from \"~/registry/ui/button\"\n\ntype RootProps<T extends ValidComponent = \"nav\"> = PolymorphicProps<T, PaginationRootProps>\n\nconst Pagination: Component<RootProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <PaginationPrimitive\n      class={cn(\"[&>*]:flex [&>*]:flex-row [&>*]:items-center [&>*]:gap-1\", props.class)}\n      {...rest}\n    />\n  )\n}\n\nconst PaginationItems = PaginationPrimitive.Items\n\ntype ItemProps<T extends ValidComponent = \"button\"> = PolymorphicProps<T, PaginationItemProps>\n\nconst PaginationItem: Component<ItemProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <PaginationPrimitive.Item\n      class={cn(\n        buttonVariants({\n          variant: \"ghost\"\n        }),\n        \"size-10 data-[current]:border\"\n      )}\n      {...rest}\n    />\n  )\n}\n\ntype EllipsisProps<T extends ValidComponent = \"div\"> = Exclude<\n  PolymorphicProps<T, PaginationEllipsisProps>,\n  \"children\"\n>\n\nconst PaginationEllipsis: Component<EllipsisProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <PaginationPrimitive.Ellipsis\n      class={cn(\"flex size-10 items-center justify-center\", props.class)}\n      {...rest}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        class=\"size-4\"\n      >\n        <circle cx=\"12\" cy=\"12\" r=\"1\" />\n        <circle cx=\"19\" cy=\"12\" r=\"1\" />\n        <circle cx=\"5\" cy=\"12\" r=\"1\" />\n      </svg>\n      <span class=\"sr-only\">More pages</span>\n    </PaginationPrimitive.Ellipsis>\n  )\n}\n\ntype PreviousProps<T extends ValidComponent = \"button\"> = Exclude<\n  PolymorphicProps<T, PaginationPreviousProps>,\n  \"children\"\n>\n\nconst PaginationPrevious: Component<PreviousProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <PaginationPrimitive.Previous\n      class={cn(\n        buttonVariants({\n          variant: \"ghost\"\n        }),\n        \"gap-1 pl-2.5\",\n        props.class\n      )}\n      {...rest}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        class=\"size-4\"\n      >\n        <path d=\"M15 6l-6 6l6 6\" />\n      </svg>\n      <span>Previous</span>\n    </PaginationPrimitive.Previous>\n  )\n}\n\ntype NextProps<T extends ValidComponent = \"button\"> = Exclude<\n  PolymorphicProps<T, PaginationNextProps>,\n  \"children\"\n>\n\nconst PaginationNext: Component<NextProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <PaginationPrimitive.Next\n      class={cn(\n        buttonVariants({\n          variant: \"ghost\"\n        }),\n        \"gap-1 pl-2.5\",\n        props.class\n      )}\n      {...rest}\n    >\n      <span>Next</span>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        class=\"size-4\"\n      >\n        <path d=\"M9 6l6 6l-6 6\" />\n      </svg>\n    </PaginationPrimitive.Next>\n  )\n}\n\nexport {\n  Pagination,\n  PaginationItems,\n  PaginationItem,\n  PaginationEllipsis,\n  PaginationPrevious,\n  PaginationNext\n}\n"
    }
  ],
  "type": "ui"
}