{
  "name": "dropdown-menu",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "dropdown-menu.tsx",
      "content": "import type { Component, ComponentProps, ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport {\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuContentProps,\n  DropdownMenuGroupLabelProps,\n  DropdownMenuItemProps,\n  DropdownMenu as DropdownMenuPrimitive,\n  DropdownMenuRadioItemProps,\n  DropdownMenuRootProps,\n  DropdownMenuSeparatorProps,\n  DropdownMenuSubContentProps,\n  DropdownMenuSubTriggerProps\n} from \"@kobalte/core/dropdown-menu\"\nimport { PolymorphicProps } from \"@kobalte/core/polymorphic\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst DropdownMenu: Component<DropdownMenuRootProps> = (props) => {\n  return <DropdownMenuPrimitive gutter={4} {...props} />\n}\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\ntype ContentProps<T extends ValidComponent = \"div\"> = PolymorphicProps<T, DropdownMenuContentProps>\n\nconst DropdownMenuContent: Component<ContentProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        class={cn(\n          \"z-50 min-w-32 origin-[var(--kb-menu-content-transform-origin)] animate-content-hide overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[expanded]:animate-content-show\",\n          props.class\n        )}\n        {...rest}\n      />\n    </DropdownMenuPrimitive.Portal>\n  )\n}\n\ntype ItemProps<T extends ValidComponent = \"div\"> = PolymorphicProps<T, DropdownMenuItemProps>\n\nconst DropdownMenuItem: Component<ItemProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <DropdownMenuPrimitive.Item\n      class={cn(\n        \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        props.class\n      )}\n      {...rest}\n    />\n  )\n}\n\nconst DropdownMenuShortcut: Component<ComponentProps<\"span\">> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return <span class={cn(\"ml-auto text-xs tracking-widest opacity-60\", props.class)} {...rest} />\n}\n\nconst DropdownMenuLabel: Component<ComponentProps<\"div\"> & { inset?: boolean }> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"inset\"])\n  return (\n    <div\n      class={cn(\"px-2 py-1.5 text-sm font-semibold\", props.inset && \"pl-8\", props.class)}\n      {...rest}\n    />\n  )\n}\n\ntype SeparatorProps<T extends ValidComponent = \"hr\"> = PolymorphicProps<\n  T,\n  DropdownMenuSeparatorProps\n>\n\nconst DropdownMenuSeparator: Component<SeparatorProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <DropdownMenuPrimitive.Separator\n      class={cn(\"-mx-1 my-1 h-px bg-muted\", props.class)}\n      {...rest}\n    />\n  )\n}\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\ntype SubTriggerProps<T extends ValidComponent = \"div\"> = PolymorphicProps<\n  T,\n  DropdownMenuSubTriggerProps\n>\n\nconst DropdownMenuSubTrigger: Component<SubTriggerProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"children\"])\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      class={cn(\n        \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n        props.class\n      )}\n      {...rest}\n    >\n      {props.children}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        class=\"ml-auto size-4\"\n      >\n        <path d=\"M9 6l6 6l-6 6\" />\n      </svg>\n    </DropdownMenuPrimitive.SubTrigger>\n  )\n}\n\ntype SubContentProps<T extends ValidComponent = \"div\"> = PolymorphicProps<\n  T,\n  DropdownMenuSubContentProps\n>\n\nconst DropdownMenuSubContent: Component<SubContentProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <DropdownMenuPrimitive.SubContent\n      class={cn(\n        \"z-50 min-w-32 origin-[var(--kb-menu-content-transform-origin)] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in\",\n        props.class\n      )}\n      {...rest}\n    />\n  )\n}\n\ntype CheckboxItemProps<T extends ValidComponent = \"div\"> = PolymorphicProps<\n  T,\n  DropdownMenuCheckboxItemProps\n>\n\nconst DropdownMenuCheckboxItem: Component<CheckboxItemProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"children\"])\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      class={cn(\n        \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        props.class\n      )}\n      {...rest}\n    >\n      <span class=\"absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-width=\"2\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            class=\"size-4\"\n          >\n            <path d=\"M5 12l5 5l10 -10\" />\n          </svg>\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {props.children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  )\n}\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\ntype GroupLabelProps<T extends ValidComponent = \"span\"> = PolymorphicProps<\n  T,\n  DropdownMenuGroupLabelProps\n>\n\nconst DropdownMenuGroupLabel: Component<GroupLabelProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <DropdownMenuPrimitive.GroupLabel\n      class={cn(\"px-2 py-1.5 text-sm font-semibold\", props.class)}\n      {...rest}\n    />\n  )\n}\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\ntype RadioItemProps<T extends ValidComponent = \"div\"> = PolymorphicProps<\n  T,\n  DropdownMenuRadioItemProps\n>\n\nconst DropdownMenuRadioItem: Component<RadioItemProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"children\"])\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      class={cn(\n        \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        props.class\n      )}\n      {...rest}\n    >\n      <span class=\"absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-width=\"2\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            class=\"size-2 fill-current\"\n          >\n            <path d=\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\" />\n          </svg>\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {props.children}\n    </DropdownMenuPrimitive.RadioItem>\n  )\n}\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuPortal,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuShortcut,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  DropdownMenuCheckboxItem,\n  DropdownMenuGroup,\n  DropdownMenuGroupLabel,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem\n}\n"
    }
  ],
  "type": "ui"
}