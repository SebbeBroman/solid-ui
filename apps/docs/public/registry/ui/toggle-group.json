{
  "name": "toggle-group",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "toggle-group.tsx",
      "content": "import { Component, createContext, splitProps, ValidComponent } from \"solid-js\"\n\nimport { PolymorphicProps } from \"@kobalte/core/polymorphic\"\nimport {\n  ToggleGroupItemProps,\n  ToggleGroup as ToggleGroupPrimitive,\n  ToggleGroupRootProps\n} from \"@kobalte/core/toggle-group\"\nimport { VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\nimport { toggleVariants } from \"~/registry/ui/toggle\"\n\nconst ToggleGroupContext = createContext<VariantProps<typeof toggleVariants>>({\n  size: \"default\",\n  variant: \"default\"\n})\n\ntype RootProps<T extends ValidComponent = \"div\"> = PolymorphicProps<T, ToggleGroupRootProps> &\n  VariantProps<typeof toggleVariants>\n\nconst ToggleGroup: Component<RootProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"children\", \"size\", \"variant\"])\n\n  return (\n    <ToggleGroupPrimitive\n      class={cn(\"flex items-center justify-center gap-1\", props.class)}\n      {...rest}\n    >\n      <ToggleGroupContext.Provider\n        value={{\n          get size() {\n            return props.size\n          },\n          get variant() {\n            return props.variant\n          }\n        }}\n      >\n        {props.children}\n      </ToggleGroupContext.Provider>\n    </ToggleGroupPrimitive>\n  )\n}\n\ntype ItemProps<T extends ValidComponent = \"button\"> = PolymorphicProps<T, ToggleGroupItemProps> &\n  VariantProps<typeof toggleVariants>\n\nconst ToggleGroupItem: Component<ItemProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"size\", \"variant\"])\n  return (\n    <ToggleGroupPrimitive.Item\n      class={cn(toggleVariants({ size: props.size, variant: props.variant }), props.class)}\n      {...rest}\n    />\n  )\n}\n\nexport { ToggleGroup, ToggleGroupItem }\n"
    }
  ],
  "type": "ui"
}