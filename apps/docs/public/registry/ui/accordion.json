{
  "name": "accordion",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "accordion.tsx",
      "content": "import type { Component, ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport {\n  AccordionContentProps,\n  AccordionItemProps,\n  Accordion as AccordionPrimitive,\n  AccordionTriggerProps\n} from \"@kobalte/core/accordion\"\nimport { PolymorphicProps } from \"@kobalte/core/polymorphic\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Accordion = AccordionPrimitive\n\ntype ItemProps<T extends ValidComponent = \"div\"> = PolymorphicProps<T, AccordionItemProps>\n\nconst AccordionItem: Component<ItemProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return <AccordionPrimitive.Item class={cn(\"border-b\", props.class)} {...rest} />\n}\n\ntype TriggerProps<T extends ValidComponent = \"button\"> = PolymorphicProps<T, AccordionTriggerProps>\n\nconst AccordionTrigger: Component<TriggerProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"children\"])\n  return (\n    <AccordionPrimitive.Header class=\"flex\">\n      <AccordionPrimitive.Trigger\n        class={cn(\n          \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-expanded]>svg]:rotate-180\",\n          props.class\n        )}\n        {...rest}\n      >\n        {props.children}\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          class=\"size-4 shrink-0 transition-transform duration-200\"\n        >\n          <path d=\"M6 9l6 6l6 -6\" />\n        </svg>\n      </AccordionPrimitive.Trigger>\n    </AccordionPrimitive.Header>\n  )\n}\n\ntype ContentProps<T extends ValidComponent = \"div\"> = PolymorphicProps<T, AccordionContentProps>\n\nconst AccordionContent: Component<ContentProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"children\"])\n  return (\n    <AccordionPrimitive.Content\n      class={cn(\n        \"animate-accordion-up overflow-hidden text-sm transition-all data-[expanded]:animate-accordion-down\",\n        props.class\n      )}\n      {...rest}\n    >\n      <div class=\"pb-4 pt-0\">{props.children}</div>\n    </AccordionPrimitive.Content>\n  )\n}\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"
    }
  ],
  "type": "ui"
}