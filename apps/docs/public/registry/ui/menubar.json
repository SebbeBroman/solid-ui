{
  "name": "menubar",
  "files": [
    {
      "name": "menubar.tsx",
      "content": "import type { Component, ComponentProps, ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport {\n  MenubarCheckboxItemProps,\n  MenubarContentProps,\n  MenubarGroupLabelProps,\n  MenubarItemLabelProps,\n  MenubarItemProps,\n  MenubarMenuProps,\n  Menubar as MenubarPrimitive,\n  MenubarRadioItemProps,\n  MenubarRootProps,\n  MenubarSeparatorProps,\n  MenubarSubContentProps,\n  MenubarSubTriggerProps,\n  MenubarTriggerProps\n} from \"@kobalte/core/menubar\"\nimport { PolymorphicProps } from \"@kobalte/core/polymorphic\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst MenubarMenu: Component<MenubarMenuProps> = (props) => {\n  return <MenubarPrimitive.Menu gutter={8} {...props} />\n}\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\ntype RootProps<T extends ValidComponent = \"div\"> = PolymorphicProps<T, MenubarRootProps>\n\nconst Menubar: Component<RootProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <MenubarPrimitive\n      class={cn(\n        \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n        props.class\n      )}\n      {...rest}\n    />\n  )\n}\n\ntype TriggerProps<T extends ValidComponent = \"button\"> = PolymorphicProps<T, MenubarTriggerProps>\n\nconst MenubarTrigger: Component<TriggerProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <MenubarPrimitive.Trigger\n      class={cn(\n        \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n        props.class\n      )}\n      {...rest}\n    />\n  )\n}\n\ntype ContentProps<T extends ValidComponent = \"div\"> = PolymorphicProps<T, MenubarContentProps>\n\nconst MenubarContent: Component<ContentProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        class={cn(\n          \"z-50 min-w-48 origin-[var(--kb-menu-content-transform-origin)] animate-content-hide overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[expanded]:animate-content-show\",\n          props.class\n        )}\n        {...rest}\n      />\n    </MenubarPrimitive.Portal>\n  )\n}\n\ntype SubTriggerProps<T extends ValidComponent = \"div\"> = PolymorphicProps<\n  T,\n  MenubarSubTriggerProps\n> & { inset?: boolean }\n\nconst MenubarSubTrigger: Component<SubTriggerProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"children\", \"inset\"])\n  return (\n    <MenubarPrimitive.SubTrigger\n      class={cn(\n        \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n        props.inset && \"pl-8\",\n        props.class\n      )}\n      {...rest}\n    >\n      {props.children}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        class=\"ml-auto size-4\"\n      >\n        <path d=\"M9 6l6 6l-6 6\" />\n      </svg>\n    </MenubarPrimitive.SubTrigger>\n  )\n}\n\ntype SubContentProps<T extends ValidComponent = \"div\"> = PolymorphicProps<T, MenubarSubContentProps>\n\nconst MenubarSubContent: Component<SubContentProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <MenubarPrimitive.SubContent\n      class={cn(\n        \"z-50 min-w-32 origin-[var(--kb-menu-content-transform-origin)] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in\",\n        props.class\n      )}\n      {...rest}\n    />\n  )\n}\n\ntype ItemProps<T extends ValidComponent = \"div\"> = PolymorphicProps<T, MenubarItemProps> & {\n  inset?: boolean\n}\n\nconst MenubarItem: Component<ItemProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"inset\"])\n  return (\n    <MenubarPrimitive.Item\n      class={cn(\n        \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        props.inset && \"pl-8\",\n        props.class\n      )}\n      {...rest}\n    />\n  )\n}\n\ntype CheckboxItemProps<T extends ValidComponent = \"div\"> = PolymorphicProps<\n  T,\n  MenubarCheckboxItemProps\n>\n\nconst MenubarCheckboxItem: Component<CheckboxItemProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"children\"])\n  return (\n    <MenubarPrimitive.CheckboxItem\n      class={cn(\n        \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        props.class\n      )}\n      {...rest}\n    >\n      <span class=\"absolute left-2 flex size-3.5 items-center justify-center\">\n        <MenubarPrimitive.ItemIndicator>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-width=\"2\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            class=\"size-4\"\n          >\n            <path d=\"M5 12l5 5l10 -10\" />\n          </svg>\n        </MenubarPrimitive.ItemIndicator>\n      </span>\n      {props.children}\n    </MenubarPrimitive.CheckboxItem>\n  )\n}\n\ntype RadioItemProps<T extends ValidComponent = \"div\"> = PolymorphicProps<T, MenubarRadioItemProps>\n\nconst MenubarRadioItem: Component<RadioItemProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"children\"])\n  return (\n    <MenubarPrimitive.RadioItem\n      class={cn(\n        \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        props.class\n      )}\n      {...rest}\n    >\n      <span class=\"absolute left-2 flex size-3.5 items-center justify-center\">\n        <MenubarPrimitive.ItemIndicator>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-width=\"2\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            class=\"size-2 fill-current\"\n          >\n            <path d=\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\" />\n          </svg>\n        </MenubarPrimitive.ItemIndicator>\n      </span>\n      {props.children}\n    </MenubarPrimitive.RadioItem>\n  )\n}\n\ntype ItemLabelProps<T extends ValidComponent = \"div\"> = PolymorphicProps<\n  T,\n  MenubarItemLabelProps\n> & { inset?: boolean }\n\nconst MenubarItemLabel: Component<ItemLabelProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"inset\"])\n  return (\n    <MenubarPrimitive.ItemLabel\n      class={cn(\"px-2 py-1.5 text-sm font-semibold\", props.inset && \"pl-8\", props.class)}\n      {...rest}\n    />\n  )\n}\n\ntype GroupLabelProps<T extends ValidComponent = \"span\"> = PolymorphicProps<\n  T,\n  MenubarGroupLabelProps\n> & { inset?: boolean }\n\nconst MenubarGroupLabel: Component<GroupLabelProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"inset\"])\n  return (\n    <MenubarPrimitive.GroupLabel\n      class={cn(\"px-2 py-1.5 text-sm font-semibold\", props.inset && \"pl-8\", props.class)}\n      {...rest}\n    />\n  )\n}\n\ntype SeparatorProps<T extends ValidComponent = \"hr\"> = PolymorphicProps<T, MenubarSeparatorProps>\n\nconst MenubarSeparator: Component<SeparatorProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <MenubarPrimitive.Separator class={cn(\"-mx-1 my-1 h-px bg-muted\", props.class)} {...rest} />\n  )\n}\n\nconst MenubarShortcut: Component<ComponentProps<\"span\">> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <span\n      class={cn(\"ml-auto text-xs tracking-widest text-muted-foreground\", props.class)}\n      {...rest}\n    />\n  )\n}\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarItemLabel,\n  MenubarGroupLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut\n}\n"
    }
  ],
  "type": "ui"
}