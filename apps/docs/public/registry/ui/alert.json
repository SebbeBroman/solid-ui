{
  "name": "alert",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "alert.tsx",
      "content": "import type { Component, ComponentProps, ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport { Alert as AlertPrimitive, AlertRootProps } from \"@kobalte/core/alert\"\nimport { PolymorphicProps } from \"@kobalte/core/polymorphic\"\nimport type { VariantProps } from \"class-variance-authority\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\"\n    }\n  }\n)\n\ntype AlertProps<T extends ValidComponent = \"div\"> = PolymorphicProps<T, AlertRootProps> &\n  VariantProps<typeof alertVariants>\n\nconst Alert: Component<AlertProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"variant\"])\n  return (\n    <AlertPrimitive class={cn(alertVariants({ variant: props.variant }), props.class)} {...rest} />\n  )\n}\n\nconst AlertTitle: Component<ComponentProps<\"h5\">> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return <h5 class={cn(\"mb-1 font-medium leading-none tracking-tight\", props.class)} {...rest} />\n}\n\nconst AlertDescription: Component<ComponentProps<\"div\">> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return <div class={cn(\"text-sm [&_p]:leading-relaxed\", props.class)} {...rest} />\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"
    }
  ],
  "type": "ui"
}